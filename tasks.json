[{"id":1,"title":"","subject":"#Визуализация G-Codes# Поиск готовых решений с открытым исходным кодом для визуализации G-кодов на языке C++ +Task until []","tags":null,"users":null,"due":"","status":"Done","completedDate":"2018-05-25T20:22:11+03:00","archived":false,"isPriority":false,"notes":null},{"id":6,"title":"","subject":"#Опрос состояния плат# При запуске клиента, он должен узнавать о текущем состоянии плат +Task until []","tags":null,"users":null,"due":"","status":"Done","completedDate":"2018-05-25T20:26:12+03:00","archived":false,"isPriority":false,"notes":null},{"id":7,"title":"","subject":"#Клиент и сервер# Внедрить клиент-серверную архитектуру с использованием web-socket. +Task until []","tags":null,"users":null,"due":"","status":"Done","completedDate":"2018-05-25T20:27:37+03:00","archived":false,"isPriority":false,"notes":null},{"id":15,"title":"","subject":"#Структура сообщений для адаптера U1# Спроектировать структуру сообщения в формате json для обмена данных с адаптерами для контроллеров U1. +Task +U1 until []","tags":null,"users":null,"due":"","status":"Done","completedDate":"2018-05-25T20:34:34+03:00","archived":false,"isPriority":false,"notes":null},{"id":11,"title":"","subject":"#Отправка УП на сервер# Разработать механизм передачи запросов на сервер для отправки программы фрезерования +Task until []","tags":null,"users":null,"due":"","status":"Done","completedDate":"2018-06-24T16:53:42+03:00","archived":false,"isPriority":false,"notes":null},{"id":12,"title":"","subject":"#U1 на Arduino# Купить комплектующие для Ардуино +Task +U1 +Arduino until []","tags":null,"users":null,"due":"","status":"Done","completedDate":"2018-07-09T11:11:40+03:00","archived":false,"isPriority":false,"notes":null},{"id":5,"title":"#Рефакторинг","subject":"#Рефакторинг датчиков и устрйоств# Вместо методов возвращающих Имена датчиков, настройки датчиков, Параметры датчиков сделать методы 1) Получения настроек каждого датчика в формате строки ключ:значение по имени датчка (менеджер датчиков) 2) Получение настроек всех датчиков (станок) 3) Получение списка имен датчиков в менеджере датчиков (менеджер датчиков) 4) Получение списка состояния датчиков в формате имя:подпись_датчика:значение. Аналогичный рефакторинг провести для устрйоств +Task @Xtail @ until [вс июня 17 2018]","tags":["Task"],"users":["Xtail"],"due":"","status":"Done","completedDate":"2018-07-09T11:11:48+03:00","archived":false,"isPriority":false,"notes":null},{"id":9,"title":"","subject":"#Рефакторинг менеджеров# Сделать наследование менеджера датчиков, датчика, менеджера устрйоств, устройства и менеджера настроек и классов от QObject. Если нужно, настроить систему сигнал слот. +Task @Xtail until []","tags":null,"users":null,"due":"","status":"Done","completedDate":"2018-07-09T11:11:49+03:00","archived":false,"isPriority":false,"notes":null},{"id":2,"title":"","subject":"#Интеграция с KFlop# Интеграция интерпретатора G-кодов из библиотеки KMotion +Task +KFlop until []","tags":null,"users":null,"due":"","status":"Backlog","completedDate":"2018-08-14T09:38:12+03:00","archived":false,"isPriority":false,"notes":null},{"id":3,"title":"","subject":"#Вычисление переменных# Включить в систему алгоритм сортировочной станции Дейкстры для разбора расчета численных значений при параметрическом способе задания +SML_Language +Task until []","tags":null,"users":null,"due":"","status":"Backlog","completedDate":"2018-08-14T09:38:14+03:00","archived":false,"isPriority":false,"notes":null},{"id":4,"title":"","subject":"#Время на фрезерование# Алгоритм для расчета примерного времени работы программы +Task until []","tags":null,"users":null,"due":"","status":"Backlog","completedDate":"2018-08-14T09:38:15+03:00","archived":false,"isPriority":false,"notes":null},{"id":8,"title":"","subject":"#Менеджер опций# Продумать архитектуру менеджера опций +Task until []","tags":null,"users":null,"due":"","status":"Backlog","completedDate":"2018-08-14T09:38:16+03:00","archived":false,"isPriority":false,"notes":null},{"id":10,"title":"#Рефакторинг","subject":"#Рефакторинг панели датчиков в GUI# Переместить панель датчиков на отдельную вкладку виджета внизу наладки (к опциям и редактору точек). Вкладку разделить на 2 половины: слева будут контролы шпниделей, справа - контролы других устройств. +Task @Xtail until []","tags":["Task"],"users":["Xtail"],"due":"","status":"Done","completedDate":"2018-08-14T09:38:26+03:00","archived":false,"isPriority":false,"notes":null},{"id":16,"title":"","subject":"#Хранение данных в Arduino# Разработать универсальную структуру для хранения состояния датчиков и устройств на Ардуино. +Arduino +Task until []","tags":null,"users":null,"due":"","status":"Done","completedDate":"2018-08-14T09:38:28+03:00","archived":false,"isPriority":false,"notes":null},{"id":17,"title":"#Переименовать","subject":"#Переименовать методы Find# FindSensor -\u003e GetSensor FindSpindel -\u003e GetSpindel FindDevice -\u003e GetDevice +Refactoring @Xtail until []","tags":["Refactoring"],"users":["Xtail"],"due":"","status":"Backlog","completedDate":"2018-08-21T14:18:32+04:00","archived":false,"isPriority":false,"notes":null},{"id":18,"title":"#Код","subject":"#Код стайл# Раработать документ по код стайлу. Основные положения: 1) Документация в стиле javadoc 2) Венгерская нотация для полей класса через m_name 3) Соглашение по именованию сигналов и слотов. onClassname_Signal(). 4) Обращение через this к полям и методам класса 5) Соглашение по именованию методов setupConnections, resetConnections +Important +Documentation @Xtail until []","tags":["Important","Documentation"],"users":["Xtail"],"due":"","status":"Backlog","completedDate":"2018-08-21T14:21:41+04:00","archived":false,"isPriority":false,"notes":null},{"id":14,"title":"#Комплексныи","subject":"#Комплексный рефакторинг# Для каждого написанного класса сделать: 1) Провести рефакторинг, органично встраивающий его в общую систему классов (добавить проброс и обработку исключений, отрефакторить названия методов, оптимизировать работу методов, оптимизировать типы данных и т.д.) 2) Обновить документацию. Красиво. Лаконично подробно. В стиле javadoc +Important +Refactoring @Xtail until []","tags":["Important","Refactoring"],"users":["Xtail"],"due":"","status":"InProgress","completedDate":"2018-08-21T14:22:05+04:00","archived":false,"isPriority":false,"notes":null},{"id":13,"title":"#Добавить","subject":"#Добавить обработку исключений# 1) перевести классы на использование QException; 2) Составить схему кейсов где генерируются исключения, кто и каким образом их должен обрабатывать 3) Подключить логгер +Important+Refactoring @Xtail until [вт авг. 14 2018]","tags":["Important","Refactoring"],"users":["Xtail"],"due":"","status":"InProgress","completedDate":"2018-08-21T14:22:12+04:00","archived":false,"isPriority":false,"notes":null}]